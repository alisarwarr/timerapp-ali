{"version":3,"sources":["components/TimerContent.tsx","components/TimerButton.tsx","components/Timer.tsx","App.tsx","index.tsx"],"names":["TimerContent","value","Typography","component","TimerButton","handleFunc","disabled","screen250","useMediaQuery","Button","variant","color","size","onClick","Timer","useState","hrs","setHrs","min","setMin","sec","setSec","disableStart","setDisableStart","disableStop","setDisableStop","disableReset","setDisableReset","countRef","useRef","firstRun","useEffect","current","x","Card","className","raised","style","fontSize","setInterval","clearInterval","App","ReactDOM","render","document","getElementById"],"mappings":"sLAoBeA,MAbf,YAAqD,IAA7BC,EAA4B,EAA5BA,MACpB,OACI,8BACI,cAACC,EAAA,EAAD,CAAYC,UAAU,IAAtB,SAESF,GAAS,GAAKA,GAAS,EAAxB,WACMA,GAAUA,O,gBCerBG,MAlBf,YAAyE,IAAlDH,EAAiD,EAAjDA,MAAOI,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,SAChCC,EAAYC,YAAc,qBAEhC,OACI,8BACI,cAACC,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,YACNC,KAAML,EAAY,QAAU,SAC5BM,QAASR,EACTC,SAAUA,EALd,SAOKL,OC2DFa,MA5Ef,WAAkB,IAAD,EACWC,mBAAS,GADpB,mBACLC,EADK,KACAC,EADA,OAEWF,mBAAS,GAFpB,mBAELG,EAFK,KAEAC,EAFA,OAGWJ,mBAAS,GAHpB,mBAGLK,EAHK,KAGAC,EAHA,OAI6BN,oBAAS,GAJtC,mBAILO,EAJK,KAISC,EAJT,OAK6BR,oBAAS,GALtC,mBAKLS,EALK,KAKSC,EALT,OAM6BV,oBAAS,GANtC,mBAMLW,EANK,KAMSC,EANT,KAOTC,EAAWC,iBAAY,MACvBC,EAAWD,kBAAgB,GAmD/B,OAhDAE,qBAAU,WACK,IAARX,GAAcU,EAASE,SACfb,GAAO,SAAAc,GAAC,OAAW,KAANA,EAAY,EAAIA,EAAI,OAE7C,CAAS,IAARb,IAEJW,qBAAU,WACK,IAARb,GAAcY,EAASE,SACff,GAAO,SAAAgB,GAAC,OAAIA,EAAI,OAE5B,CAAS,IAARf,IAuCA,eAACgB,EAAA,EAAD,CAAMC,UAAU,QAAQC,QAAM,EAA9B,UACI,sBAAKD,UAAU,gBAAf,UACI,cAAC,EAAD,CAAclC,MAAOe,IADzB,IACgC,sBAAMqB,MAAO,CAAEC,SAAU,WAAzB,eAC5B,cAAC,EAAD,CAAcrC,MAAOiB,IAFzB,IAEgC,sBAAMmB,MAAO,CAAEC,SAAU,WAAzB,eAC5B,cAAC,EAAD,CAAcrC,MAAOmB,OAGzB,sBAAKe,UAAU,eAAf,UACI,cAAC,EAAD,CAAalC,MAAM,QAAQI,WA5CnB,WAChBuB,EAASI,QAAWO,aAAY,WACTlB,GAAO,SAAAY,GAAC,OAAW,KAANA,EAAY,EAAIA,EAAI,OACjC,KACvBH,EAASE,SAAU,EACnBT,GAAgB,GAChBE,GAAe,GACfE,GAAgB,IAqC4CrB,SAAUgB,IAC9D,cAAC,EAAD,CAAarB,MAAM,OAAQI,WAnCpB,WACfmC,cAAcZ,EAASI,SACvBT,GAAgB,GAChBE,GAAe,GACfE,GAAgB,GAEL,IAARX,GAAqB,IAARE,GAAqB,IAARE,IAEzBG,GAAgB,GAChBE,GAAe,GACfE,GAAgB,KAyBwCrB,SAAUkB,IAC9D,cAAC,EAAD,CAAavB,MAAM,QAAQI,WAtBnB,WAChBmC,cAAcZ,EAASI,SACvBf,EAAO,GAAIE,EAAO,GAAIE,EAAO,GAC7BS,EAASE,SAAU,EAEnBT,GAAgB,GAChBE,GAAe,GACfE,GAAgB,IAe4CrB,SAAUoB,WC/D/De,MATf,WACI,OACI,qBAAKN,UAAU,MAAf,SACI,cAAC,EAAD,O,MCDZO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.b3f7fbc4.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\ninterface TimerContentProps {\n    value : number;\n}\n\nfunction TimerContent({ value }: TimerContentProps) {\n    return (\n        <div>\n            <Typography component=\"p\">\n                {\n                    (value >= 0 && value <= 9)\n                    ? `0${value}` : value\n                }\n            </Typography>\n        </div>\n    )\n}\n\nexport default TimerContent;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\ninterface TimerButtonProps {\n    value : string;\n    handleFunc : () => void;\n    disabled : boolean;\n}\n\nfunction TimerButton({ value, handleFunc, disabled }: TimerButtonProps) {\n    const screen250 = useMediaQuery('(max-width:250px)');\n\n    return (\n        <div>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                size={screen250 ? \"small\" : \"medium\"}\n                onClick={handleFunc}\n                disabled={disabled}\n            >\n                {value}\n            </Button>\n        </div>\n    )\n}\n\nexport default TimerButton;","import React, { useState, useEffect, useRef } from 'react';\nimport Card from '@material-ui/core/Card';\nimport TimerContent from './TimerContent';\nimport TimerButton from './TimerButton';\n\nfunction Timer() {\n    const [ hrs, setHrs ] = useState(0);\n    const [ min, setMin ] = useState(0);\n    const [ sec, setSec ] = useState(0);\n    const [ disableStart, setDisableStart ] = useState(false);\n    const [ disableStop , setDisableStop  ] = useState(true);\n    const [ disableReset, setDisableReset ] = useState(true);\n    var countRef = useRef<any>(null);      //'useRef' beacuse interval can't store in variable or state but can store in useRef of ReactJS\n    var firstRun = useRef<boolean>(true);  //'useRef' beacuse firstRun can't store in variable but can store in useRef or state of ReactJS\n    \n\n    useEffect(() => {\n        if(sec === 0 && !firstRun.current) {\n            (() => setMin(x => (x === 59) ? 0 : x + 1))();\n        }\n    }, [sec === 0]);\n\n    useEffect(() => {\n        if(min === 0 && !firstRun.current) {\n            (() => setHrs(x => x + 1))();\n        }\n    }, [min === 0]);\n\n    \n    const handleStart = () => {\n        countRef.current =  setInterval(() => {\n                               setSec(x => (x === 59) ? 0 : x + 1);\n                            }, 1000);\n        firstRun.current = false;\n        setDisableStart(true);\n        setDisableStop(false);\n        setDisableReset(false);\n    }\n\n    const handleStop = () => {\n        clearInterval(countRef.current);\n        setDisableStart(false);\n        setDisableStop(true);\n        setDisableReset(false);\n\n        if(hrs === 0 && min === 0 && sec === 0) {\n          //back to initially\n            setDisableStart(false);\n            setDisableStop(true);\n            setDisableReset(true);\n        }\n    }\n\n    const handleReset = () => {\n        clearInterval(countRef.current);\n        setHrs(0); setMin(0); setSec(0);\n        firstRun.current = true;\n        //back to initially\n        setDisableStart(false);\n        setDisableStop(true);\n        setDisableReset(true);\n    }\n\n    \n    return (\n        <Card className=\"timer\" raised>\n            <div className=\"timer_content\">\n                <TimerContent value={hrs}/> <span style={{ fontSize: \"5.25rem\" }}>:</span>\n                <TimerContent value={min}/> <span style={{ fontSize: \"5.25rem\" }}>:</span>\n                <TimerContent value={sec}/>\n            </div>\n\n            <div className=\"timer_button\">\n                <TimerButton value=\"start\" handleFunc={handleStart} disabled={disableStart}/>\n                <TimerButton value=\"stop\"  handleFunc={handleStop}  disabled={disableStop}/>\n                <TimerButton value=\"reset\" handleFunc={handleReset} disabled={disableReset}/>\n            </div>\n        </Card>\n    )\n}\n\nexport default Timer;","import React from 'react';\nimport { Timer } from './components';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Timer\n            />\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/Style.scss';\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n"],"sourceRoot":""}